{"version":3,"sources":["logo.svg","components/AllNinjas.js","components/NewNinjaForm.js","components/OneNinja.js","components/Edit.js","App.js","reportWebVitals.js","index.js"],"names":["AllNinjas","useState","allNinjas","setAllNinjas","deleteClicked","setDeleteClicked","useEffect","axios","get","then","res","console","log","data","results","catch","err","map","ninja","i","className","to","_id","name","graduationDate","numProjects","isVeteran","src","profilePicUrl","alt","height","width","onClick","e","idOfNinja","delete","NewNinjaForm","history","useHistory","formInfo","setFormInfo","validationErrors","setValidationErrors","changeHandler","target","value","type","onSubmit","preventDefault","post","errors","push","htmlFor","onChange","id","message","OneNinja","idParam","useParams","ninjaInfo","setNinjaInfo","Edit","put","checked","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe59002c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n\nconst AllNinjas = () => {\n\n    //have a variable to store all the ninjas i get back from the api in\n    const [allNinjas, setAllNinjas] = useState([])\n\n    // //state variable to track if delete is clicked so that if it is, the component can rerender\n    const [deleteClicked, setDeleteClicked] = useState(false)\n\n    //call the api upon initial rendering (hint hint) of the component and save the array of ninjas into my variable to store all the ninjas in\n    useEffect(()=>{\n        axios.get(\"http://localhost:8000/api/ninjas\")\n            .then(res=>{\n                console.log(\"******res is this-->\", res)\n                setAllNinjas(res.data.results)\n            })\n            .catch(err=> console.log(\"ERRORRRR-->\", err))\n    },[deleteClicked])\n\n\n    const deleteClickHandler = (e,idOfNinja)=>{\n        console.log(\"trying to delete ninja with this id-->\", idOfNinja )\n        axios.delete(`http://localhost:8000/api/ninjas/${idOfNinja}`)\n            .then(res=>{\n                console.log(\"response after axios delete-->\", res)\n                setDeleteClicked(!deleteClicked)\n\n            })\n            .catch(err=>console.log(\"errrrrr when deleting-->\", err))\n    }\n\n\n    return (\n        <div>\n            <h3>All the ninjas</h3>\n            {/* display all the ninjas */}\n            {allNinjas.map((ninja,i)=>{\n                return <div key = {i} className=\"card\">\n                <div className=\"card-body\">\n                  <h4 className=\"card-title\"><Link to={`/ninja/${ninja._id}`}>{ninja.name}</Link>| <Link to = {`/ninja/edit/${ninja._id}`} className=\"btn btn-info\">Edit</Link></h4>\n                  <p className=\"card-text\">Graduation Date: {ninja.graduationDate}</p>\n                  <p className=\"card-text\">Number of Projects: {ninja.numProjects}</p>\n                  <p className=\"card-text\">Is Veteran: {ninja.isVeteran? \"Veteran\": \"Not Veteran\"}</p>\n                  <p><img src={ninja.profilePicUrl} alt=\"\" height=\"100px\" width=\"100px\"/></p>\n                  <p><button onClick = {(e)=>deleteClickHandler(e,ninja._id)} className=\"btn btn-danger\">Delete Ninja</button></p>\n                  {/* <a href=\"#!\" className=\"btn btn-primary\">Go somewhere</a> */}\n                </div>\n              </div>\n            })}\n        </div>\n    );\n};\n\n\nexport default AllNinjas;","import axios from 'axios';\nimport React, {useState} from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nconst NewNinjaForm = () => {\n\n    const history = useHistory(); //this is for redirecting when we submit the form\n\n    let [formInfo, setFormInfo] = useState({\n        name: null,\n        numProjects: null,\n        graduationDate: null,\n        isVeteran: false,\n        profilePicUrl: null\n    })\n\n    let [validationErrors, setValidationErrors] = useState({})\n\n\n    const changeHandler = (e)=>{\n        console.log(\"changin something\")\n        console.log(e.target.name, e.target.value)\n        if(e.target.type == \"checkbox\"){ //update state a little differently if the event target is the checkbox\n            setFormInfo({\n                ...formInfo,\n                isVeteran: !formInfo.isVeteran\n            })\n        } else{//for all the other input types, update state as we normally do\n            setFormInfo({ \n                ...formInfo,\n                [e.target.name]:e.target.value\n            })\n\n        }\n    }\n\n    const submitHandler = (e)=>{\n        e.preventDefault();\n        console.log(\"submitted with this info-->\", formInfo)\n        axios.post(\"http://localhost:8000/api/ninjas\", formInfo)\n            .then(res=>{\n                console.log(\"response after submitting post request-->\", res)\n                if(res.data.err){ //if there is validation errors\n                    //do not redirect if there is validation errors\n                    //store the errors object from the back end into a state variabel so i can display the state variable info on the page\n                    setValidationErrors(res.data.err.errors)\n\n                }else{ //if the form is filled out properly\n                    history.push(\"/\"); //this redirects to home if form is submitting properly\n\n                }\n            })\n            .catch(err=>console.log(\"errrrrr-->\", err))\n    }\n\n    return (\n        <div>\n            <h3>Create a new ninja below</h3>\n            <form onSubmit={submitHandler}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Name:</label>\n                    <input onChange = {changeHandler} type=\"text\" name=\"name\" id=\"\" className=\"form-control\" />\n                    <p className=\"text-danger\">{validationErrors.name? validationErrors.name.message: \"\"}</p>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Number of Projects:</label>\n                    <input onChange = {changeHandler} type=\"number\" name=\"numProjects\" id=\"\" className=\"form-control\" />\n                    <p className=\"text-danger\">{validationErrors.numProjects? validationErrors.numProjects.message:\"\"}</p>\n\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Graduation Date:</label>\n                    <input onChange = {changeHandler} type=\"date\" name=\"graduationDate\" id=\"\" className=\"form-control\" />\n                    <p className=\"text-danger\">{validationErrors.graduationDate? validationErrors.graduationDate.message: \"\"}</p>\n\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Profile Picture URL:</label>\n                    <input onChange = {changeHandler} type=\"text\" name=\"profilePicUrl\" id=\"\" className=\"form-control\" />\n                    <p className=\"text-danger\">{validationErrors.profilePicUrl?.message}</p>\n\n\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Veteran?</label>\n                    <input onChange = {changeHandler} type=\"checkbox\" name=\"isVeteran\" id=\"\" />\n                </div>\n                {/* Veteran checkbox */}\n                <input className= \"btn btn-primary\"type=\"submit\" value=\"Create Ninja!\" />\n\n            </form>\n        </div>\n    );\n};\n\n\nexport default NewNinjaForm;","import React, {useEffect, useState} from 'react';\nimport { useParams } from \"react-router\";\nimport axios from 'axios'\nimport { useHistory } from \"react-router-dom\";\n\nconst OneNinja = () => {\n    const { idParam } = useParams();\n    const [ninjaInfo, setNinjaInfo] = useState({})\n    const history = useHistory();\n\n    useEffect(()=>{\n        axios.get(`http://localhost:8000/api/ninjas/${idParam}`)\n            .then(res=>{\n                console.log(\"response when trying to get one ninja-->\", res)\n                setNinjaInfo(res.data.results)\n            })\n            .catch(err=>console.log(\"errrrrrrr \", err))\n    },[idParam])\n\n\n    const deleteClickHandler = ()=>{\n        console.log(\"trying to delete ninja with this id-->\", ninjaInfo._id )\n        axios.delete(`http://localhost:8000/api/ninjas/${ninjaInfo._id}`)\n            .then(res=>{\n                console.log(\"response after axios delete-->\", res)\n                history.push(\"/\")\n\n            })\n            .catch(err=>console.log(\"errrrrr when deleting-->\", err))\n    }\n\n\n    return (\n        <div>\n            <h1>Info about ninja with the id of {idParam}</h1>\n            <p>Name: {ninjaInfo.name}</p>\n            <p>Number of projects: {ninjaInfo.numProjects}</p>\n            <p>Grad Date: {ninjaInfo.graduationDate}</p>\n            <p>Veteran: {ninjaInfo.isVeteran? \"Is Veteran\": \"Not Veteran\"}</p>\n            <p><img src={ninjaInfo.profilePicUrl} alt=\"\" /></p>\n            <p><button onClick = {deleteClickHandler} className=\"btn btn-danger\">Delete Ninja</button></p>\n\n        </div>\n    );\n};\n\n\nexport default OneNinja;","import React, {useState, useEffect} from 'react';\nimport { useParams } from \"react-router\";\nimport axios from 'axios'\nimport { useHistory } from \"react-router-dom\";\n\n\nconst Edit = () => {\n    const { idParam } = useParams();\n    const history = useHistory(); //this is for redirecting when we submit the form\n\n\n    const [ninjaInfo, setNinjaInfo] = useState({})\n\n    useEffect(()=>{\n        axios.get(`http://localhost:8000/api/ninjas/${idParam}`)\n            .then(res=>{\n                console.log(\"response when trying to get one ninja-->\", res)\n                setNinjaInfo(res.data.results)\n            })\n            .catch(err=>console.log(\"errrrrrrr \", err))\n    },[])\n\n\n    const changeHandler = (e)=>{\n        console.log(\"changin something\")\n        console.log(e.target.name, e.target.value)\n        if(e.target.type == \"checkbox\"){ //update state a little differently if the event target is the checkbox\n            setNinjaInfo({\n                ...ninjaInfo,\n                isVeteran: !ninjaInfo.isVeteran\n            })\n        } else{//for all the other input types, update state as we normally do\n            setNinjaInfo({ \n                ...ninjaInfo,\n                [e.target.name]:e.target.value\n            })\n\n        }\n    }\n\n    const submitHandler = (e)=>{\n        e.preventDefault();\n        axios.put(`http://localhost:8000/api/ninjas/${idParam}`, ninjaInfo )\n            .then(res=>{\n                console.log(\"response afer put request\", res)\n                history.push(`/ninja/${idParam}`);\n            })\n            .catch(err=> console.log(\"errrrr, \", err))\n    }\n\n\n    return (\n        <div>\n            <h1>Edit ninja with this id: </h1>\n            <form onSubmit={submitHandler}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Name:</label>\n                    <input onChange = {changeHandler} type=\"text\" name=\"name\" id=\"\" className=\"form-control\" value = {ninjaInfo.name} />\n                    {/* <p className=\"text-danger\">{validationErrors.name? validationErrors.name.message: \"\"}</p> */}\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Number of Projects:</label>\n                    <input onChange = {changeHandler} type=\"number\" name=\"numProjects\" id=\"\" className=\"form-control\" value = {ninjaInfo.numProjects} />\n                    {/* <p className=\"text-danger\">{validationErrors.numProjects? validationErrors.numProjects.message:\"\"}</p> */}\n\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Graduation Date:</label>\n                    <input onChange = {changeHandler} type=\"date\" name=\"graduationDate\" id=\"\" className=\"form-control\" value = {ninjaInfo.graduationDate}/>\n                    {/* <p className=\"text-danger\">{validationErrors.graduationDate? validationErrors.graduationDate.message: \"\"}</p> */}\n\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Profile Picture URL:</label>\n                    <input onChange = {changeHandler} type=\"text\" name=\"profilePicUrl\" id=\"\" className=\"form-control\" value = {ninjaInfo.profilePicUrl} />\n                    {/* <p className=\"text-danger\">{validationErrors.profilePicUrl?.message}</p> */}\n\n\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"\">Veteran?</label>\n                    <input onChange = {changeHandler} type=\"checkbox\" name=\"isVeteran\" id=\"\" checked = {ninjaInfo.isVeteran} />\n                </div>\n                {/* Veteran checkbox */}\n                <input className= \"btn btn-primary\"type=\"submit\" value=\"Update Ninja!\" />\n\n            </form>\n        </div>\n    );\n};\n\n\nexport default Edit;","import logo from './logo.svg';\nimport './App.css';\nimport AllNinjas from './components/AllNinjas';\nimport NewNinjaForm from './components/NewNinjaForm';\nimport OneNinja from './components/OneNinja';\nimport Edit from './components/Edit';\n\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Link //link is like a href but without reloading the page\n} from \"react-router-dom\";\n\n\nfunction App() {\n\n  \n\n  \n  return (\n    <BrowserRouter>\n      <div className=\"App container\">\n        <h1>Wall of Ninjas</h1>\n        {/* <a className= \"btn btn-success\" href=\"/new\">Create a new ninja</a> */}\n        <Link className= \"btn btn-info mr-3\" to= \"/\">Home</Link>\n        <Link className= \"btn btn-success\" to= \"/new\">Create a new ninja</Link>\n\n\n        <Switch>\n          <Route exact path= \"/\"> \n            <AllNinjas></AllNinjas>\n          </Route>\n          <Route exact path=\"/new\">\n            <NewNinjaForm></NewNinjaForm>\n          </Route>\n          <Route exact path= \"/ninja/:idParam\">\n            <OneNinja></OneNinja>\n          </Route>\n          <Route exact path = \"/ninja/edit/:idParam\">\n            <Edit></Edit>\n          </Route>\n        </Switch>\n        \n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}